# From https://github.com/kubernetes-sigs/cluster-api-provider-vsphere/releases/download/v1.7.0/clusterclass-template.yaml
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: VSphereClusterTemplate
metadata:
  name: '${CLUSTER_CLASS_NAME}'
  namespace: '${NAMESPACE}'
spec:
  template:
    spec: {}
---
apiVersion: cluster.x-k8s.io/v1beta1
kind: ClusterClass
metadata:
  name: '${CLUSTER_CLASS_NAME}'
spec:
  controlPlane:
    machineInfrastructure:
      ref:
        apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
        kind: VSphereMachineTemplate
        name: ${CLUSTER_CLASS_NAME}-controlplane-machinetemplate
        namespace: '${NAMESPACE}'
    ref:
      apiVersion: controlplane.cluster.x-k8s.io/v1beta1
      kind: KubeadmControlPlaneTemplate
      name: ${CLUSTER_CLASS_NAME}-controlplane-bootstrap-template
      namespace: '${NAMESPACE}'
  infrastructure:
    ref:
      apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
      kind: VSphereClusterTemplate
      name: '${CLUSTER_CLASS_NAME}'
      namespace: '${NAMESPACE}'
  patches:
  - definitions:
    - jsonPatches:
      - op: add
        path: /spec/template/spec/kubeadmConfigSpec/users
        valueFrom:
          template: |
            - name: capv
              sshAuthorizedKeys:
              - '{{ .sshKey }}'
              sudo: ALL=(ALL) NOPASSWD:ALL
      selector:
        apiVersion: controlplane.cluster.x-k8s.io/v1beta1
        kind: KubeadmControlPlaneTemplate
        matchResources:
          controlPlane: true
    - jsonPatches:
      - op: add
        path: /spec/template/spec/users
        valueFrom:
          template: |
            - name: capv
              sshAuthorizedKeys:
              - '{{ .sshKey }}'
              sudo: ALL=(ALL) NOPASSWD:ALL
      selector:
        apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
        kind: KubeadmConfigTemplate
        matchResources:
          machineDeploymentClass:
            names:
            - ${CLUSTER_CLASS_NAME}-worker
    enabledIf: '{{ if .sshKey }}true{{end}}'
    name: enableSSHIntoNodes
  - definitions:
    - jsonPatches:
      - op: add
        path: /spec/template/spec/controlPlaneEndpoint
        valueFrom:
          template: |
            host: '{{ .controlPlaneIpAddr }}'
            port: 6443
      - op: add
        path: /spec/template/spec/identityRef
        valueFrom:
          template: |
            kind: Secret
            name: '{{ .credsSecretName }}'
      - op: add
        path: /spec/template/spec/server
        valueFrom:
          variable: infraServer.url
      - op: add
        path: /spec/template/spec/thumbprint
        valueFrom:
          variable: infraServer.thumbprint
      selector:
        apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
        kind: VSphereClusterTemplate
        matchResources:
          infrastructureCluster: true
    name: infraClusterSubstitutions
  - definitions:
    - jsonPatches:
      - op: add
        path: /spec/template/spec/kubeadmConfigSpec/files/0/content
        valueFrom:
          variable: kubeVipPodManifest
      selector:
        apiVersion: controlplane.cluster.x-k8s.io/v1beta1
        kind: KubeadmControlPlaneTemplate
        matchResources:
          controlPlane: true
    name: kubeVipEnabled
  - definitions:
    - jsonPatches:
      - op: add
        path: /spec/template/spec/template
        valueFrom:
          variable: template
      selector:
        apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
        kind: VSphereMachineTemplate
        matchResources:
          controlPlane: true
    - jsonPatches:
      - op: add
        path: /spec/template/spec/template
        valueFrom:
          variable: template
      selector:
        apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
        kind: VSphereMachineTemplate
        matchResources:
          machineDeploymentClass:
            names:
            - ${CLUSTER_CLASS_NAME}-worker
    description: Name of the vSphere template for the control plane and worker nodes.
    name: template
  - definitions:
    - jsonPatches:
      - op: add
        path: /spec/template/spec/folder
        valueFrom:
          variable: folder
      selector:
        apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
        kind: VSphereMachineTemplate
        matchResources:
          controlPlane: true
    - jsonPatches:
      - op: add
        path: /spec/template/spec/folder
        valueFrom:
          variable: folder
      selector:
        apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
        kind: VSphereMachineTemplate
        matchResources:
          machineDeploymentClass:
            names:
            - ${CLUSTER_CLASS_NAME}-worker
    description: Name of the vSphere folder for the control plane and worker VMs.
    name: folder
  - definitions:
    - jsonPatches:
      - op: add
        path: /spec/template/spec/numCPUs
        valueFrom: 
          variable: controlPlaneCPUs
      selector:
        apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
        kind: VSphereMachineTemplate
        matchResources:
          controlPlane: true
    - jsonPatches:
      - op: add
        path: /spec/template/spec/numCPUs
        valueFrom: 
          variable: workerCPUs
      selector:
        apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
        kind: VSphereMachineTemplate
        matchResources:
          machineDeploymentClass:
            names:
            - ${CLUSTER_CLASS_NAME}-worker
    description: Number of CPUs for the control plane and worker nodes.
    name: cpus
  - definitions:
    - jsonPatches:
      - op: add
        path: /spec/template/spec/memoryMiB
        valueFrom: 
          variable: controlPlaneMemory
      selector:
        apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
        kind: VSphereMachineTemplate
        matchResources:
          controlPlane: true
    - jsonPatches:
      - op: add
        path: /spec/template/spec/memoryMiB
        valueFrom: 
          variable: workerMemory
      selector:
        apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
        kind: VSphereMachineTemplate
        matchResources:
          machineDeploymentClass:
            names:
            - ${CLUSTER_CLASS_NAME}-worker
    description: Amount of memory for the control plane and worker nodes in MBs.
    name: memory
  - definitions:
    - jsonPatches:
      - op: add
        path: /spec/template/spec/diskGiB
        valueFrom: 
          variable: controlPlaneDiskSize
      selector:
        apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
        kind: VSphereMachineTemplate
        matchResources:
          controlPlane: true
    - jsonPatches:
      - op: add
        path: /spec/template/spec/diskGiB
        valueFrom: 
          variable: workerDiskSize
      selector:
        apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
        kind: VSphereMachineTemplate
        matchResources:
          machineDeploymentClass:
            names:
            - ${CLUSTER_CLASS_NAME}-worker
    description: Size of the disk for the control plane and worker nodes in GBs.
    name: diskSize
  variables:
  - name: sshKey
    required: false
    schema:
      openAPIV3Schema:
        description: Public key to SSH onto the cluster nodes.
        type: string
  - name: infraServer
    required: true
    schema:
      openAPIV3Schema:
        properties:
          thumbprint:
            type: string
          url:
            type: string
        type: object
  - name: controlPlaneIpAddr
    required: true
    schema:
      openAPIV3Schema:
        description: Floating VIP for the control plane.
        type: string
  - name: credsSecretName
    required: true
    schema:
      openAPIV3Schema:
        description: Secret containing the credentials for the infra cluster.
        type: string
  - name: kubeVipPodManifest
    required: true
    schema:
      openAPIV3Schema:
        description: kube-vip manifest for the control plane.
        type: string
  - name: folder
    required: true
    schema:
      openAPIV3Schema:
        description: Name of the vSphere folder for the control plane and worker VMs.
        type: string
  - name: template
    required: true
    schema:
      openAPIV3Schema:
        description: Name of the control plane vSphere template and worker VMs.
        type: string
  - name: controlPlaneCPUs
    required: true
    schema:
      openAPIV3Schema:
        description: Number of CPUs for the control plane nodes.
        type: integer
  - name: controlPlaneMemory
    required: true
    schema:
      openAPIV3Schema:
        description: Amount of memory for the control plane nodes in MBs.
        type: integer
  - name: controlPlaneDiskSize
    required: true
    schema:
      openAPIV3Schema:
        description: Size of the disk for the control plane nodes in GBs.
        type: integer
  - name: workerCPUs
    required: true
    schema:
      openAPIV3Schema:
        description: Number of CPUs for the worker nodes.
        type: integer
  - name: workerMemory
    required: true
    schema:
      openAPIV3Schema:
        description: Amount of memory for the worker nodes in MBs.
        type: integer
  - name: workerDiskSize
    required: true
    schema:
      openAPIV3Schema:
        description: Size of the disk for the worker nodes in GBs.
        type: integer
  workers:
    machineDeployments:
    - class: ${CLUSTER_CLASS_NAME}-worker
      template:
        bootstrap:
          ref:
            apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
            kind: KubeadmConfigTemplate
            name: ${CLUSTER_CLASS_NAME}-worker-bootstrap-template
            namespace: '${NAMESPACE}'
        infrastructure:
          ref:
            apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
            kind: VSphereMachineTemplate
            name: ${CLUSTER_CLASS_NAME}-worker-machinetemplate
            namespace: '${NAMESPACE}'
        metadata: {}
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: VSphereMachineTemplate
metadata:
  name: ${CLUSTER_CLASS_NAME}-controlplane-machinetemplate
  namespace: '${NAMESPACE}'
spec:
  template:
    spec:
      cloneMode: linkedClone
      datacenter: '${VSPHERE_DATACENTER}'
      datastore: '${VSPHERE_DATASTORE}'
      folder: ''
      network:
        devices:
        - dhcp4: true
          networkName: '${VSPHERE_NETWORK}'
      os: Linux
      resourcePool: '${VSPHERE_RESOURCE_POOL}'
      server: '${VSPHERE_SERVER}'
      storagePolicyName: '${VSPHERE_STORAGE_POLICY}'
      template: '<REPLACE_ME>'
      thumbprint: '${VSPHERE_TLS_THUMBPRINT}'
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: VSphereMachineTemplate
metadata:
  name: ${CLUSTER_CLASS_NAME}-worker-machinetemplate
  namespace: '${NAMESPACE}'
spec:
  template:
    spec:
      cloneMode: linkedClone
      datacenter: '${VSPHERE_DATACENTER}'
      datastore: '${VSPHERE_DATASTORE}'
      folder: ''
      network:
        devices:
        - dhcp4: true
          networkName: '${VSPHERE_NETWORK}'
      os: Linux
      resourcePool: '${VSPHERE_RESOURCE_POOL}'
      server: '${VSPHERE_SERVER}'
      storagePolicyName: '${VSPHERE_STORAGE_POLICY}'
      template: '<REPLACE_ME>'
      thumbprint: '${VSPHERE_TLS_THUMBPRINT}'
---
apiVersion: controlplane.cluster.x-k8s.io/v1beta1
kind: KubeadmControlPlaneTemplate
metadata:
  name: ${CLUSTER_CLASS_NAME}-controlplane-bootstrap-template
  namespace: '${NAMESPACE}'
spec:
  template:
    spec:
      kubeadmConfigSpec:
        clusterConfiguration:
          apiServer:
            extraArgs:
              cloud-provider: external
          controllerManager:
            extraArgs:
              cloud-provider: external
        files:
        - owner: root:root
          path: /etc/kubernetes/manifests/kube-vip.yaml
        initConfiguration:
          nodeRegistration:
            criSocket: /var/run/containerd/containerd.sock
            kubeletExtraArgs:
              cloud-provider: external
            name: '{{ local_hostname }}'
        joinConfiguration:
          nodeRegistration:
            criSocket: /var/run/containerd/containerd.sock
            kubeletExtraArgs:
              cloud-provider: external
            name: '{{ local_hostname }}'
        preKubeadmCommands:
        - hostnamectl set-hostname "{{ ds.meta_data.hostname }}"
        - echo "::1         ipv6-localhost ipv6-loopback localhost6 localhost6.localdomain6"
          >/etc/hosts
        - echo "127.0.0.1   {{ ds.meta_data.hostname }} {{ local_hostname }} localhost
          localhost.localdomain localhost4 localhost4.localdomain4" >>/etc/hosts
        users:
        - name: capv
          sshAuthorizedKeys:
          - '${VSPHERE_SSH_AUTHORIZED_KEY}'
          sudo: ALL=(ALL) NOPASSWD:ALL
---
apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
kind: KubeadmConfigTemplate
metadata:
  name: ${CLUSTER_CLASS_NAME}-worker-bootstrap-template
  namespace: '${NAMESPACE}'
spec:
  template:
    spec:
      joinConfiguration:
        nodeRegistration:
          criSocket: /var/run/containerd/containerd.sock
          kubeletExtraArgs:
            cloud-provider: external
          name: '{{ local_hostname }}'
      preKubeadmCommands:
      - hostnamectl set-hostname "{{ ds.meta_data.hostname }}"
      - echo "::1         ipv6-localhost ipv6-loopback localhost6 localhost6.localdomain6"
        >/etc/hosts
      - echo "127.0.0.1   {{ ds.meta_data.hostname }} {{ local_hostname }} localhost
        localhost.localdomain localhost4 localhost4.localdomain4" >>/etc/hosts
